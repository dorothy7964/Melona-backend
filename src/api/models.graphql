type User {
    id: ID! 
    email: String!
    userName: String!
    password: String!
    avatar: String
    following: [User!]! 
    followers: [User!]! 
    posts: [Post!]!
    comments: [Comment!]! 
    applys: [Apply!]!
    chatRooms: [ChatRoom!]! 
    friendRooms: [FriendRoom!]! 
    createdAt: String
    updatedAt: String
}
 
type Post {
    id: ID! 
    user: User 
    location: String!
    startDate: String 
    lastDate: String!
    categorys: [Category!]! 
    comments: [Comment!]!
    applys: [Apply!]!
    friendRooms: [FriendRoom!]!
    createdAt: String
    updatedAt: String
}
 
type Category {
    id: ID!
    text: String!
    post: Post
    contents: [Contents!]!
    createdAt: String
    updatedAt: String
}
 
type Contents {
    id: ID!
    text: String!
    check: Boolean!
    confirmCheck: Boolean! 
    confirmFile: String
    category: Category
    createdAt: String
    updatedAt: String
}
 
type Apply {
    id: ID!
    user: User 
    post: Post 
    apply: Boolean!
    readCheck: Boolean! 
    progress: Boolean
    createdAt: String
    updatedAt: String
}
 
type Comment {
    id: ID!
    text: String!
    user: User
    post: Post
    createdAt: String
    updatedAt: String
}
 
type ChatRoom {
    id: ID!
    participants: [User!]!
    messages: [Message!]! 
    lastMessage: String
    lastMsgTime: String
    createdAt: String
    updatedAt: String
}

type Message {
    id: ID!
    text: String!
    from: User! 
    to: User! 
    chatRoom: ChatRoom!
    readMessage: Boolean!
    createdAt: String
    updatedAt: String
}
 
type FriendRoom {
    id: ID!
    roomName: String!
    participants: [User!]!
    post: Post
    createdAt: String
    updatedAt: String
}