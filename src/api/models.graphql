type User {
    id: ID! 
    email: String!
    userName: String!
    password: String!
    avatar: String
    address: String
    following: [User!]! 
    followers: [User!]! 
    isFollowing: Boolean!
    followingCount: Int!
    followersCount: Int!
    isSelf: Boolean!
    posts: [Post!]!
    comments: [Comment!]! 
    recomments: [ReComment!]! 
    contents: [Contents!]! 
    contentsReq: [ContentsReq!]!
    applys: [Apply!]!
    chatRooms: [ChatRoom!]! 
    groupRooms: [GroupRoom!]! 
    groupRoomMember: [GroupRoomMember!]!
    createdAt: String
    updatedAt: String
}
 
type Post {
    id: ID! 
    user: User 
    viewApply: Boolean 
    anotherPage: Boolean
    groupRoom: String
    location: String!
    startDate: String 
    lastDate: String!
    categorys: [Category!]! 
    contents: [Contents!]! 
    comments: [Comment!]!
    commentCount: Int!
    applys: [Apply!]!
    applysRead: [Apply!]!
    isApply: Boolean
    isApplyWait: Boolean
    isApplyReadCheck: Boolean
    applysCount: Int!
    applysReadCount: Int!
    createdAt: String
    updatedAt: String
}
 
type Category {
    id: ID!
    text: String!
    post: Post
    contents: [Contents!]!
    createdAt: String
    updatedAt: String
}
 
type Contents {
    id: ID!
    text: String!
    check: Boolean!
    confirmCheck: Boolean! 
    confirmFile: String
    confirmProgress: Int 
    user: User
    post: Post
    category: Category
    contentsReqs:[ContentsReq!]!  
    createdAt: String
    updatedAt: String
}
 
type ContentsReq {
    id: ID!
    check: Boolean!
    confirmCheck: Boolean! 
    confirmFile: String
    confirmProgress: Int 
    contents: Contents
    user: User
    createdAt: String
    updatedAt: String
}
 
type Apply {
    id: ID!
    user: User!
    post: Post!
    apply: Boolean!
    applyWait: Boolean
    readCheck: Boolean
    progress: Boolean
    createdAt: String
    updatedAt: String
}
 
type Comment {
    id: ID!
    text: String!
    user: User
    post: Post
    reply: Boolean
    recomments: [ReComment!]!
    reCommentCount: Int!
    commentCount: Int!
    createdAt: String
    updatedAt: String
}

type ReComment {
    id: ID!
    text: String
    user: User 
    comments: Comment 
    createdAt: String
    updatedAt: String
}
 
type ChatRoom {
    id: ID!
    participants: [User!]!
    messages: [Message!]! 
    unReadMsgCounter: Int!
    lastMessage: String
    lastMsgTime: String
    createdAt: String
    updatedAt: String
}

type Message {
    id: ID!
    text: String!
    from: User! 
    to: User! 
    chatRoom: ChatRoom!
    readMessage: Boolean!
    createdAt: String
    updatedAt: String
}
 
type GroupRoom {
    id: ID!
    roomName: String!
    founderUser: User!
    coverPhoto: String
    groupRoomMember: [GroupRoomMember!]!
    createdAt: String
    updatedAt: String
}

type GroupRoomMember {
    id: ID!
    groupRoom: GroupRoom!
    participants: [User!]! 
    createdAt: String
    updatedAt: String
}